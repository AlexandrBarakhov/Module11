import numpy as np

# Создание двумерного массива чисел arr1
arr1 = np.array([[1, 2, 3, 4, 5], [30, 25, 20, 15, 10]])
print("Исходный массив arr1:\n", arr1)

# Размерность массива
print("Размерность массива arr1:", arr1.ndim)

# Количество элементов по каждому измерению
print("Количество элементов массива arr1 по каждому измерению:", arr1.shape)

# Вычисление среднего значения элементов массива
mean_value = np.mean(arr1)
print("Среднее значение элементов массива arr1:", mean_value)

# Возведение каждого элемента массива в квадрат
squared_array = np.square(arr1)
print("Массив arr1, возведенный в квадрат:\n", squared_array)

# Создание двумерного массива чисел arr2
arr2 = np.array([np.arange(5, 10), np.arange(20, 10, -2)])
print("Исходный массив arr2:\n", arr2)

# Объединение и сортировка
arr3 = np.sort(np.concatenate((arr1, arr2)))
print("Объединение массивов arr1 и arr2 и сортировка элементов каждой рамерности по возрастанию:\n", arr3)

# NumPy - это основа для высокопроизводительных
# математических и научных вычислений в Python.
# Библиотека предоставляет N-мерные массивы (ndarrays),
# которые значительно расширяют возможности Python в области:

# 1.  Эффективная работа с массивами:
#     - Векторизованные операции: вычисления над целыми массивами, а не поэлементно,
#       что значительно ускоряет обработку данных, особенно для больших массивов.
#     - Оптимизированные функции: NumPy содержит реализации
#       математических функций (sin, cos, exp, sqrt и др.),
#       которые оптимизированы для работы с массивами.

# 2. Математические операции:
#     - Линейная алгебра:  операции с матрицами и векторами,
#       решение систем уравнений, вычисление собственных значений и т.д.
#     - Статистика:  среднее, медиана, стандартное отклонение,
#       корреляция, гистограммы и другие статистические функции.
#     - Преобразования Фурье:  быстрые преобразования Фурье (FFT)
#       для анализа сигналов и изображений.

# 3. Генерация случайных чисел:
#     - Мощный генератор случайных чисел с
#       различными распределениями (нормальное, равномерное и т.д.)
#       для симуляций и моделирования.

# 4.  Интеграция:
#     - NumPy массивы - основа для многих других библиотек Python,
#       таких как Pandas, SciPy, Matplotlib, Scikit-learn и др.
#     -  Это делает NumPy незаменимым инструментом
#        для широкого спектра задач:
#        от анализа данных до машинного обучения и глубинного обучения.

# В целом, NumPy делает Python мощным инструментом для научных и инженерных вычислений,
# предоставляя высокую производительность и богатый набор математических функций.
